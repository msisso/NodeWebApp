doctype html
html
    head
        link(rel='stylesheet', type='text/css', href='css/style.css')
        script(type='text/javascript', src='js/jquery.js')
        script.
            var Valids = []; //Array that always contains the valid advertises by their time period
            var index = 0; //variable to move on Valids array
            var dataIndex = 0; //variable to move on msgData array
            var imgIndex = 0; //variable to move on msgImage array
            var advNumber = 0; //show which advertise is now on the screen
            var SumTimeout = 0; //sum of all the advertise showing time on the screen
            var myInterval;
            //Array that contains all the adv objects
            var advertises = !{JSON.stringify(advertise)}
            //function that get gay number from 0 to 6 and return the day name
            function returnDayName(dayNum) {
                var daysNames = ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"];
                return (daysNames[dayNum]);
            }
            //update the Valids array with valid advertises by their time period
            function GetValidViews(dayWeek, date, hours, minutes, seconds) {
                var x = 0;
                Valids = []; //empty the array
                //foreach on the Valids array
                $.each(advertises, function (ind, value) {
                    if (jQuery.inArray(dayWeek, value.daysShow) != (-1)) {
                        //Date.parse calculate the number of milliseconds between the date string and midnight of January 1, 1970.
                        if ((Date.parse(value.startDate) <= Date.parse(date)) && (Date.parse(date) <= Date.parse(value.endDate))) {
                            var temp = value.srartTime.split(':');
                            var StartHour = temp[0];
                            var StartMinutes = temp[1];
                            var StartSeconds = temp[2];
                            temp = value.endTime.split(':');
                            var EndHour = temp[0];
                            var EndMinutes = temp[1];
                            var EndSeconds = temp[2];
                            if ((StartHour < hours || (StartHour == hours && StartMinutes < minutes ) || (StartHour == hours && StartMinutes == minutes && StartSeconds <= seconds))
                                    && (hours < EndHour || (hours == EndHour && minutes < EndMinutes) || (hours == EndHour && minutes == EndMinutes && seconds <= EndSeconds))) {
                                Valids.push(value);
                            }
                        }
                    }
                    x++;
                });
                //exit from the function until the foreach is over
                if (x === advertises.length) {
                    if (Valids.length != 0) {
                        return 0;
                    }
                    else {
                        return 2;
                    }
                }
                else {
                    return 1;
                }
            }
            //check the valid advertises and update the Valids array with the function 'GetValidViews'
            function checkDateAndTimeValidation(callback) {
                var dt = new Date();
                var date = (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear();
                var hours = dt.getHours();
                var minutes = dt.getMinutes();
                var seconds = dt.getSeconds();
                var day = returnDayName(dt.getDay());
                var returnValue = GetValidViews(day, date, hours, minutes, seconds);
                if (returnValue === 0) {
                    //if call back in define it calls to 'startToAdvertise' function
                    SumTimeout = 0;
                    if (Valids.length > 1) {
                        for (var i = 0, l = Valids.length; i < l; i++) {
                            SumTimeout += parseInt(Valids[i].advTimer);
                        }
                    }

                    if (typeof callback != 'undefined') {
                        callback();
                    }
                }
                else if (returnValue === 2) {
                    $('.FrameContainer').load('templates/NoValids.html', runNoValidTemplate);
                    setTimeout(function () {
                        checkDateAndTimeValidation(function () {
                            startToAdvertise();
                        });
                        dataIndex = 0;
                        imgIndex = 0;
                    }, 60000);
                }
                else {
                    return 1;
                }
            }


            /*Check which advertise is now playing*/
            function ToRunNow() {
                for (var i = 0, l = advertises.length; i < l; i++) {
                    if (advertises[i].msgName === Valids[index].msgName) {
                        advNumber = i;
                        break;
                    }
                }

            }

            //load the html template to start showing the advertise
            function startToAdvertise() {

                var timeout = parseInt(Valids[index].advTimer);
                $('.flexslider').attr("data-msgName", Valids[index].msgName);
                ToRunNow(); //update the 'advNumber' variable with the current advertise on the screen

                //load the html template to the screen and run after finish loadinf the 'runTempate' function
                $('.FrameContainer').load(Valids[index].linkTemplate, runTemplate(timeout, advertises[advNumber].msgData.length));
                //run all over the Valid array to show all the valids advertises on the screen
                index++;
                if (index === Valids.length) {
                    index = 0;
                    checkDateAndTimeValidation();
                }

                setTimeout(function () {
                    imgIndex = 0;
                    dataIndex = 0;
                    startToAdvertise();
                }, timeout);


            }

            function runNoValidTemplate() {
                var string = "There is no any message that is valid in this time";
                $("<h1 id=\"msgData\" class=\"headline\" style=\"color:#ffffff\"></h1>").appendTo($(".align_center"));
                var q = jQuery.map(string.split(''), function (letter) {
                    return $('<span>' + letter + '</span>');
                });
                var dest = $('#msgData');
                var c = 0;
                var i = setInterval(function () {
                    q[c].appendTo(dest).hide().fadeIn(1000);
                    c += 1;
                    if (c >= q.length) clearInterval(i);
                }, 100);
            }

            //function that call the functions that change the image and messages on the screen
            function runTemplate(time,msgLength) {
                var x = 0;

                myInterval = setInterval(function () {
                    changeImg();
                    setTimeout(function () {
                        changeMsgData();
                    }, 1000);
                    x += time/msgLength;
                    //alert(x);
                    //alert(time);

                    if(x === time)
                    {
                        alert("cleared");
                        clearInterval(myInterval);
                    }
                }, (time/msgLength));
            }

            //fade in the message on the screen letter by letter

            function InnerChamgeMsg() {
                $("<h1 id=\"msgData\" class=\"headline\" style=\"color:#ffffff\"></h1>").appendTo($(".align_center"));

                var q = jQuery.map(advertises[advNumber].msgData[dataIndex].split(''), function (letter) {
                    return $('<span>' + letter + '</span>');
                });
                var dest = $('#msgData');
                var c = 0;
                var i = setInterval(function () {
                    q[c].appendTo(dest).hide().fadeIn(1000);
                    c += 1;
                    if (c >= q.length) clearInterval(i);
                }, 100);
                dataIndex++;

                if (dataIndex === advertises[advNumber].msgData.length) {
                    dataIndex = 0;
                }

            }

            //change the mesage  and load the next message in the message array of the advertise object
            function changeMsgData() {
                if ($("#msgData").length != 0 && $("#msgData").text() != "") {
                    $("#msgData").fadeOut("slow");
                    setTimeout(function () {
                        $("#msgData").remove();
                        InnerChamgeMsg();
                    }, 100);
                }
                else {
                    InnerChamgeMsg();
                }

            }

            //change the image background and load the next image in the img array of the advertise object
            function changeImg() {
                var image = $('.flexslider .slide1');
                image.fadeOut(1000, function () {
                    if (advertises[advNumber].msgImage.length != 0) {
                        image.css("background-image", "url('img/" + advertises[advNumber].msgImage[imgIndex] + "')");
                        image.fadeIn(1000);
                        imgIndex++;
                        if (imgIndex === advertises[advNumber].msgImage.length) {
                            imgIndex = 0;
                        }
                    }
                    else {
                        var colors = ["#58D8FB", "#333333", "#990099"];
                        var rand = Math.floor(Math.random() * colors.length);
                        image.css("background", colors[rand]);
                        image.fadeIn(1000);
                    }
                });
            }

            $(document).ready(function () {
                checkDateAndTimeValidation(function () {
                    startToAdvertise();
                });
            });
    body
        block content
